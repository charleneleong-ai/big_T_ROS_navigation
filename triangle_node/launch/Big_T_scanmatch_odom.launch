<launch>

<!--publishing the static transforms-->

<node pkg="tf" type="static_transform_publisher" name="base_link_to_camera_tf" args="0.02 0 0 0 0 0 /base_link /camera_link 100" /> 
 <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="0.02 0 0 0 0 0 /base_link /laser 100"/>
 <!--<node pkg="tf" type="static_transform_publisher" name="odom_to_base_link" args="0 0 0 0 0 0 /odom /base_link 100"/>-->

<!--launching the lidar node-->
<node pkg="urg_node" name="urg_node" type="urg_node" output="screen">
    <param name="ip_address" value=""/>
    <param name="serial_port" value="/dev/ttyACM1"/>
    <param name="serial_baud" value="115200"/>
    <param name="frame_id" value="laser"/>
    <param name="calibrate_time" value="true"/>
    <param name="publish_intensity" value="false"/>
    <param name="publish_multiecho" value="false"/>
</node>



<!-- Launching hector mapping's scanmatch odometry -->
 <node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">
   

   <param name="map_frame" value="hector_map" />
     <param name="base_frame" value="base_link"/>
    <param name="odom_frame" value="scanmatcher_odom" />
    
 
    <param name="pub_map_odom_transform" value="false"/>
    <param name="pub_map_scanmatch_transform" value="false"/>
    <param name="pub_odometry" value="true"/>

    <!--<remap from="scanmatch_odom"       to="odom"/>-->
</node> 


 <!--Launching odom transformer -->
<node name="odomtransformer" pkg="triangle_node" type="odomtransformer.py" output="screen">
		<param name="odom_input" value="/scanmatch_odom" />
		<param name="tf_output" value="/odom" />
	</node>

<!--
	<node name="hector_mapping" pkg="hector_mapping" type="hector_mapping" output="screen">
   		<remap from="map" to="/mapcurrent" />
    	<param name="map_frame" value="/mapcurrent" />
    	<param name="base_frame" value="/base_link" />
    	<param name="odom_frame" value="/scanmatcher_odom" />
		<param name="pub_odometry" value="true" />
    	<param name="use_tf_scan_transformation" value="true"/>
		<param name="use_tf_pose_start_estimate" value="false"/>
    	<param name="pub_map_odom_transform" value="false" />
    
		<param name="map_resolution" value="0.025"/>
    	<param name="map_size" value="2048"/>
    	<param name="map_start_x" value="0.5"/>
    	<param name="map_start_y" value="0.5" />
		<param name="map_multi_res_levels" value="2" />
    
    	<param name="update_factor_free" value="0.4" />
    	<param name="update_factor_occupied" value="0.9" />    
    	<param name="map_update_distance_thresh" value="0.4" />
    	<param name="map_update_angle_thresh" value="0.06" />
    	<param name="laser_z_min_value" value = "-1.0" />
    	<param name="laser_z_max_value" value = "1.0" />

    	<param name="advertise_map_service" value="true" />
    
    	<param name="scan_subscriber_queue_size" value="5"/>
    	<param name="scan_topic" value="/lms100/scan"/>
    	<param name="pub_map_scanmatch_transform" value="false" />
    	<param name="tf_map_scanmatch_transform_frame_name" value="scanmatcher_frame" />
	</node>
-->



<node pkg="robot_localization" type="ekf_localization_node" name="ekf_state_estimator" clear_params="true" output="screen" >

    <rosparam command="load" file="$(find triangle_node)/params/ekf_localisation.yaml" />
    <remap from="odometry/filtered" to="odom" />
  </node>


</launch>
